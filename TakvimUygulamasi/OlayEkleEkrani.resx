<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /HcCIAR/AAAAfwAAAH8AAAB/gAAA/+IgB/8=
</value>
  </data>
</root>